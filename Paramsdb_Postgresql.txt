--
-- Pasos generales en el desarrollo y pruebas de Params. Rendimiento de BDs PostgreSQL
-- Fecha: 08-Agosto-2022
--

postgres@rcom-prod-postgres02:~/14/main$ cat postgresql.auto.conf
# Do not edit this file manually!
# It will be overwritten by the ALTER SYSTEM command.
log_directory = '/var/pg_data/pg_log'
max_connections = '200'
shared_buffers = '8GB'
effective_cache_size = '12GB'
maintenance_work_mem = '512MB'
checkpoint_completion_target = '0.9'
wal_buffers = '32MB'
default_statistics_target = '100'
random_page_cost = '1.1'
effective_io_concurrency = '300'
work_mem = '16MB'
min_wal_size = '1GB'
max_wal_size = '8GB'
max_worker_processes = '16'
max_parallel_workers_per_gather = '4'
max_parallel_workers = '16'
max_parallel_maintenance_workers = '4'
synchronous_commit = 'off'
ssl = 'off'
logging_collector = 'on'
compute_query_id = 'on'
track_io_timing = 'on'
listen_addresses = '*'
default_tablespace = 'tbs_dat'
port = '5432'
archive_command = 'pgbackrest --stanza=dbprod archive-push %p'
archive_mode = 'on'
wal_level = 'replica'
shared_preload_libraries = 'pg_stat_statements'
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = 'on'
log_connections = 'on'
log_disconnections = 'off'
log_lock_waits = 'on'
log_temp_files = '0'
log_autovacuum_min_duration = '0'
log_error_verbosity = 'default'
log_min_duration_statement = '500'
lc_messages = 'en_US.UTF-8'
log_rotation_size = '200MB'
log_statement = 'all'
postgres@rcom-prod-postgres02:~/14/main$

-------------------------------------------------------

# Do not edit this file manually!
# It will be overwritten by the ALTER SYSTEM command.
#
# Generated by the pardb_dp_conf_ideal.py script.
# Date: July 29, 2022
#
max_connections = '100'
shared_buffers = '2GB'
effective_cache_size = '3GB'
maintenance_work_mem = '256MB'
checkpoint_completion_target = '0.9'
wal_buffers = '16MB'
default_statistics_target = '100'
random_page_cost = '4'
effective_io_concurrency = '2'
work_mem = '4MB'
min_wal_size = '1GB'
max_wal_size = '4GB'
max_worker_processes = '8'
max_parallel_workers_per_gather = '4'
max_parallel_workers = '8'
max_parallel_maintenance_workers = '4'
shared_preload_libraries = 'pg_stat_statements'
ssl = 'off'
synchronous_commit = 'off'
lc_messages = 'en_US.UTF-8'
listen_addresses = '*'
port = '5432'

------------------------------------------------------------

ejecutar en linea de comandos para ejecutar spyder:

$ anaconda-navigator
$ jupyter notebook

jupyter notebook --generate-config
nano /home/jperez/.jupyter/jupyter_notebook_config.py
grep '^\w' jupyter_notebook_config.py
c.NotebookApp.ip = '*'
c.NotebookApp.open_browser = False
c.NotebookApp.port = 9999

netstat -anp | grep 9999
netstat -nut | grep 9999
cat /etc/services | grep 9999

http://192.168.21.9:9999/lab
43eed30db633c41c2be2f1e495a494d9bc19f9421610b45c

[I 2022-08-08 09:13:12.743 LabApp] JupyterLab extension loaded from /home/jperez/anaconda3/lib/python3.9/site-packages/jupyterlab
[I 2022-08-08 09:13:12.743 LabApp] JupyterLab application directory is /home/jperez/anaconda3/share/jupyter/lab
[I 09:13:12.746 NotebookApp] Serving notebooks from local directory: /home/jperez
[I 09:13:12.746 NotebookApp] Jupyter Notebook 6.4.8 is running at:
[I 09:13:12.746 NotebookApp] http://agetic14:9999/?token=2cbd696e353d0f9dc81ae09c17934eb4d45f15ecadfc47eb
[I 09:13:12.746 NotebookApp]  or http://127.0.0.1:9999/?token=2cbd696e353d0f9dc81ae09c17934eb4d45f15ecadfc47eb
[I 09:13:12.746 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).

python3 /home/jperez/.config/spyder-py3/pardb_dp_recursos.py
python3 /home/jperez/.config/spyder-py3/pardb_dp_conf_ideal.py
python3 /home/jperez/.config/spyder-py3/pardb_dp_conf_real.py -a 192.168.21.9 -d postgres -u postgres -w manager
python3 /home/jperez/.config/spyder-py3/pardb_dp_ajuste.py -a 192.168.21.9 -w manager -c 200 -l 192.168.21.9 -P 5432 -s -m -g -o

conda install -c anaconda psycopg2

--
-- Ordenado por propósito de cada grupo de parámetros
--

-- postgres@rcom-prod-postgres02:~/14/main$ cat postgresql.auto.conf

# Do not edit this file manually!
# It will be overwritten by the ALTER SYSTEM command.

-- Resource usage  - Memoria

max_connections = '200'
effective_cache_size = '12GB'
shared_buffers = '8GB'
work_mem = '16MB'
maintenance_work_mem = '512MB'
wal_buffers = '32MB'

-- Disco

checkpoint_completion_target = '0.9'
default_statistics_target = '100'
random_page_cost = '1.1'
effective_io_concurrency = '200'
#### default_tablespace = 'tbs_dat'

-- Write-Ahead Log

min_wal_size = '1GB'
max_wal_size = '8GB'
synchronous_commit = 'off'
fsync = 'on'

-- Procesos

max_worker_processes = '16'
max_parallel_workers_per_gather = '4'
max_parallel_workers = '16'
max_parallel_maintenance_workers = '4'

-- Accesibilidad

listen_addresses = '*'
port = '5432'
ssl = 'off'

-- Monitoreo

# compute_query_id = 'on'    ### desde la version 14
track_io_timing = 'on'
shared_preload_libraries = 'pg_stat_statements'

-- Archiving

archive_command = 'pgbackrest --stanza=dbprod archive-push %p'
archive_mode = 'on'
wal_level = 'replica'

-- Logging for analisis de logs

#### log_directory = '/var/pg_data/pg_log'
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = 'on'
log_connections = 'on'
log_disconnections = 'off'
log_lock_waits = 'on'
log_temp_files = '0'
log_autovacuum_min_duration = '0'
log_error_verbosity = 'default'
log_min_duration_statement = '500'
log_rotation_size = '200MB'
log_statement = 'all'
logging_collector = 'on'
lc_messages = 'en_US.UTF-8'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = '1d'


====================

Analisis comprativo:

{
    "max_connections": { 
        "actual": "100", "sugerido": "150"
    },
    "effective_cache_size": { 
        "actual": "15GB", "sugerido": "12GB"
    },
    "shared_buffers": { 
        "atual": "10GB", "sugerido": "10GB"
    },

}

list = {"nombre": "pepe", "appellido": "perez"}
que_es = str(type(list))
print(que_es, type(que_es))

lista = {"nombre": "pepe", "appellido": "perez"}
age = isinstance(lista,dict)

my_dict = isinstance({"A":"a", "B":"b", "C":"c", "D":"d"},dict)
print("my_dict is a dict:", my_dict)
